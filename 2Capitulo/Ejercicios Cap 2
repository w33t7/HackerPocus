Ejercicios de AUTOEVALUACION 
2.1 Complete los espacios en blanco.
  a)Todo programa en C comienza su ejecucion en la funcion  __MAIN__
  b)La __ { __ comienza el cuerpo de toda funcion, y la __ }__ finaliza el cuerpo de toda funcion.
  c) Toda instruccion finaliza con un __ ; __
  d) La funcion __ printf __ de la biblioteca estandar despliega informacion en la pantalla.
  e) La secuencia de escapa \n representa una __   __, la cual ocasiona que le cursor se coloque al principio de la siguiente linea de la oanbtalla./
  f) La funcion __ scanf __ de la biblioteca estandar se utiliza para obtener datos desde el teclado.
  g) El especificador de conversion __ %d __ se utiliza en una cadena de control de formato de scanf para indicar que se introsucira un entero, y en una cadean de control de fromato de printf para indicar que el resultado sera un entero.
  h) Siempre que un nuevo valor se coloca en una posicion de memoria, ese valor sobreescribe al anterior Dicho proceso se cnoce como lectrua __ destructiva__
  i) Cuando un valor se lee desde una posicion de memorua, el valor que se encuentra en esa posicon se preserva; a esto se le llama lectura __ No destrucyiva __
  j) La instruccion __ if __ se utiliza para tomar desiciones.


2.2 Diga si los siguientes enunciados son verdaderos o falsos. Si son falsos, explique por que.
  a) Cuando se llama a la funcion printf, esta siempre comienza la impresion al principio de una nueva linea. FALSO
  b) Cuando se ejecuta un programa, los comentarios ocasionan que la computadora imprima el texto encerrado entre /* y */ sobre la pantallas FALSO
  c) Cuando la secuencia de escape \n se utiliza en una cadeana de control de formato printf, esta ocasiona que el cursor se coloque al principio de la siguiente linea de la pantalla.
  d) Todas las variables deben declararse, antes de que se utilicen
  e) A todas las variables se les debe asignar un tipo cuando se declaran.
  f) C considera identicas a las varibales numero y NuMEro.
  g) Las declaraciones pueden aparecer en cualquier parte del cuerpo de una funcion.
  h) Todos los argumentos que se encuentran despues de la cadena de control de formato en una funcion printf deben ser precedidos por un amperson (&)
  i) El operador modulo (%) puede utilizarse solo con operandos enteros.
  j) Los operadores aritmeticos *, /, %, + y - tienen el mismo nivel de precedencia.
  k) Los siguientes nombres de variables son identicos en todos los sistemas ANSI C.
      esteesunnombresuperduperlargo1234567
      esteesunnombresuperduperlargo1234568
  l) Un programa que imprime tres lineas como resultado debe contener tres instrucciones printf.\
  
2.3 Escriba una sola instruccion de C para hacer lo que indican los siguientes ennunciados:

  a) Declare las variables c, estaVariable, q76354 y numero como de tipo int
  b) Indique al usuario que introduzca un entero. Finalice su mensaje de indicaciones con dos puntos (:), seguidos por un espacio, y deje el cursor posicionado despues del espacio.
  c) Lea un entero introducido desde el teclado y alamacene su valor en la variable entera a.
  d) Si numero no es igual que 7, imprima "La variable numero no es igual a 7"
  e) En una linea, imprima el mensaje "Este es un programa en C"
  f) En dos lineas, imprima el mensaje "Este es un programa en C", de tal forma que la primera linea termine en "programa"
  g) Imprima el mensaje "Este es un programa en C", de tal forma que cada palabra aparezca separada por un salt de tabulador.
  
2.4 Escriba una instruccion (o comentario) para realizar lo siguiente :

  a) Indique que el programa calculara el producto de tres entero.
  b) Declare las variables x, y, z y resultado de tipo int
  c) Indique al usuario que introduzca tres enteros.
  d) Lea tres enteros instroducidos desde el teclado y alamacenalos en las variables x, y, z 
  e) Calcule el producto de los tres entero contenidos en las variables x,y,z y asigne el resultado a la variable resultado
  f) Imprima "El producto es", seguido del valor de la variable entera resultado.
  
2.5 Escriba un programa completo que calcule el producto de tres enteros, utilizando las instrucciones que escribio en el ejercicio 2.4

2.6 Identifique y corrija los errores de cada una de las siguientes instrucciones:

  a) printf ("El valor es %d\n, &numero);
  b) scanf ("%d%d", &numero1, numero2);
  c) if ( c < 7);
        printf(" C es menor que 7\n");
  d) if (c => 7);
        printf("C es mayor o igual que 7\n");
        
  **************************************************** EJERCICIOS ************************************************************
  
2.7 Identifique y corrija los errores de cada uno de los siguientes ejercicios (Nota: Puede haber mas de un error en cada ejercicio)
  
  a) scanf("d", valor); //scanf("d", &valor);
  b) printf("El producto de %d y %d es %d\n, x, y); //printf("El producto de %d y %d es %d\n, &x, &y);
  c) primerNumero + segundoNumero = sumaDeNumeros  //primerNumero + segundoNumero = sumaDeNumeros;
  d) if (numero => masGrande)
        masGrande == numero;
  e) */ Programa para determinar el número más grande de tres enteros /*
  f) Scanf( %d”, unEntero );
  g) printf( “El residuo de %d entre %d es\n”, x, y, x % y );
  h) if ( x = y );
        printf( %d es igual que %d\n”, x, y );
  i) printf( “La suma es %d\n,” x + y );
  j) Printf( “El valor que escribió es: %d\n, &valor );
  
2.8 Complete los espacios en blanco:

a) Los se utilizan para documentar un programa y para mejorar su legibilidad.
b) La función que se utiliza para desplegar información en la pantalla es .
c) En C, una instrucción para tomar decisiones es .
d) En general, las instrucciones son quienes realizan los cálculos.
e) La función introduce valores desde el teclado.
2.9 Escriba una sola instrucción o línea de C que realice lo siguiente:
a) Imprima el mensaje “Escriba dos números”.
b) Asigne el producto de las variables b y c a la variable a.
c) Indique que un programa realiza un cálculo de nómina (es decir, utilice texto que ayude a documentar un programa).
d) Escriba tres valores enteros desde el teclado y coloque estos valores en las variables enteras a, b y c.
2.10 Indique cuáles de las siguientes oraciones son verdaderas y cuáles son falsas. Si son falsas, explique su respuesta.
a) Los operadores de C se evalúan de izquierda a derecha.
b) Los siguientes son nombres de variables válidos: _guion_bajo_, m928134, t5, j7, sus_ventas,
su_cuenta_total, a, b, c, z, z2.
c) La instrucción printf(“a = 5;”); es un típico ejemplo de una instrucción de asignación.
d) Una expresión aritmética válida que no contiene paréntesis se evalúa de izquierda a derecha.
e) Los siguientes son nombres no válidos de variables: 3g, 87, 67h2, h22, 2h.
2.11 Complete los espacios en blanco:
a) ¿Qué operaciones aritméticas se encuentran en el mismo nivel de precedencia que la multiplicación?
.
b) En una expresión aritmética, cuando los paréntesis están anidados, ¿qué conjunto de paréntesis se evalúa primero?
c) Una posición en la memoria de la computadora que contiene diferentes valores en diferentes momentos, a lo
largo de la ejecución de un programa se conoce como .
2.12 ¿Qué se imprime cuando se ejecuta cada una de las siguientes instrucciones? Si no se imprime algo, entonces responda
“nada”. Suponga que x=2 y y=3.
a) printf( “%d”, x );
b) printf( “%d”, x + x );
c) printf( “x=” );
d) printf( “x=%d”, x );
e) printf( “%d = %d”, x + y, y + x );
f) z = x + y;
g) scanf( “%d%d”, &x, &y );
h) /* printf( “x + y = %d”, x + y ); */
i) printf( “\n”);

2.13 ¿Cuáles de las siguientes instrucciones de C contienen variables involucradas con la lectura destructiva?

a) scanf( “%d%d%d%d%d”, &b, &c, &d, &e, &f );
b) p = i + j + k + 7;
c) printf( “Lectura destructiva” );
d) printf( “a = 5” );

2.14 Dada la ecuación y = ax3
+7, ¿cuál de las siguientes son instrucciones correctas en C para esta ecuación?

a) y = a * x * x * x + 7;
b) y = a * x * x * ( x + 7 );
c) y = ( a * x ) * x * ( x + 7 );
d) y = ( a * x ) * x * x + 7;
e) y = a * ( x * x * x ) + 7;
f) y = a * x * ( x * x + 7 );
